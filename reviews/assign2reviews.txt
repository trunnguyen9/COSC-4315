[Venkat 09/30/15 07:28 AM EDT]
review: yay, you're done.

done.

------------------------------------------------------------------------------
[Venkat 09/29/15 07:00 AM EDT]
review: see suggestion

see suggestion in code.

------------------------------------------------------------------------------
[Venkat 09/28/15 05:55 AM EDT]
review: reduce

See if you can reduce the tail recursion even further.

------------------------------------------------------------------------------
[Venkat 09/27/15 07:47 AM EDT]
review: good progress

Scala: good

Erlang:
Test use assertEqual and remove [].

fibonacciSeries change to fibonacciSeriesRecursive
Fix indentation.

Move forward.

------------------------------------------------------------------------------
[Venkat 09/26/15 07:27 AM EDT]
review: one assert per test

Scala:
Give space after comma.

Erlang:
Write multiple tests than putting several asserts in one.

------------------------------------------------------------------------------
[Venkat 09/24/15 07:37 AM MDT]
review: very nice work

Good job with this code, nice.
Mark the tail recursive function with the recommended annotation.

Move forward.

------------------------------------------------------------------------------
[Venkat 09/23/15 06:45 AM CDT]
review: good progress

Give space after comma.

Where possible remove type information (: List[Int]).

Move to the next function.

------------------------------------------------------------------------------
[Venkat 09/21/15 05:37 AM MDT]
review: reduce further, refactor to pattern matching

testFibonacciRegularRecursivePosition0:
Remove calls to toArray
Use assertEquals instead of assertArrayEquals

Give one space after comma.

FibonacciRegularRecursive:
Change name to FibonnaciSeries

getSeries: change name to getSeriesRecursive

Use match and case instead of if - pattern matching.
Reduce code in the last part, call getSeriesRecursive once, store the
result in a val, then use ::: to concat the sum.

------------------------------------------------------------------------------
[Venkat 09/20/15 05:47 AM EDT]
review: reduce, keep things immutable as much as possible

FibonacciRegularRecursive:
Reduce code.
Array/ArrayBuffer 
Use List instead of Array, let's promote immutability where we can.

------------------------------------------------------------------------------
[Venkat 09/19/15 05:43 AM EDT]
review: JavaScript TCO?

Does JavaScript natively support TCO? If so, write a prototype to show
that a large recursion does not fail. Then we can consider using this
language.

------------------------------------------------------------------------------
scala - done